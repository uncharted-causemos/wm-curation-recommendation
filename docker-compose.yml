version: '3.4'

services:
  redis:
    image: 'docker-hub.uncharted.software/redis:5.0.4-stretch'
    restart: '${DOCKER_RESTART_POLICY:-unless-stopped}'
    stop_grace_period: '${DOCKER_STOP_GRACE_PERIOD:-3s}'
    volumes:
      - type: volume
        source: redis
        target: /data
        volume:
          nocopy: true

  app:
    build:
      context: '.'
      args:
        - 'FLASK_ENV=${FLASK_ENV:-production}'
    env_file:
      - .env
    healthcheck:
      test: '${DOCKER_HEALTHCHECK_TEST:-curl 0.0.0.0:5000/}'
      interval: '60s'
      timeout: '3s'
      start_period: '5s'
      retries: 3
    links:
      - 'redis'
    depends_on:
      - 'redis'
    ports:
      - '${DOCKER_WEB_PORT:-0.0.0.0:5000}:5000'
    volumes:
      - type: bind
        source: ./data
        target: /app/data
      - type: volume
        source: ml_models
        target: /app/resources/ml_models
        volume:
          nocopy: true

  celery_worker:
    build:
      context: '.'
      args:
        - 'FLASK_ENV=${FLASK_ENV:-production}'
    env_file:
      - .env
    links:
      - 'redis'
    depends_on:
      - 'redis'
    command: celery -A web.celery.worker.celery worker --loglevel=info
    volumes:
      - type: bind
        source: ./data
        target: /app/data
      - type: volume
        source: ml_models
        target: /app/resources/ml_models
        volume:
          nocopy: true

volumes:
  redis: {}
  ml_models: {}
